# -*- coding: utf-8 -*-
"""Survey1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KYwIwjBrisCc4EG5lfJ0Flc-U0xLXNt_
"""

!pip install faker pandas numpy

import pandas as pd
import numpy as np
from faker import Faker
import random

# Initialize Faker
fake = Faker()

# Set random seed for reproducibility
Faker.seed(0)
np.random.seed(0)
random.seed(0)

# Define the number of synthetic responses
NUM_RESPONSES = 100

# Define possible choices for multiple-choice questions
genders = ['Male', 'Female', 'Trans', 'Other']
cities = ['Alhambra', 'Altadena', 'Arcadia', 'Atwater', 'Azusa', 'Baldwin Park',
          'Bradbury', 'Duarte', 'Eagle Rock', 'El Monte', 'South El Monte',
          'Glendale', 'El Sereno', 'Highland Park', 'Irwindale', 'La Canada',
          'La Crescenta', 'Monrovia', 'Lincoln Heights', 'Monterey Hills',
          'Monterey Park', 'Montrose', 'Pasadena', 'South Pasadena', 'Rosemead',
          'San Gabriel', 'San Marino', 'Temple City', 'Tujunga', 'Other']
how_hear = ['Our website', 'Social media', 'Email marketing', 'Search engine',
            'Online advertising', 'Print advertising', 'Radio or television advertising',
            'In-store signage or displays', 'Referrals from friends or family',
            'Word-of-mouth']
yes_no = ['Yes', 'No']
ethnicities = ['American Indian or Alaska Native', 'Asian', 'Black or African American',
               'Hispanic or Latino', 'Native Hawaiian or Other Pacific Islander', 'White']
relationships = ['Relative', 'Friend', 'No Contact', 'Other']

# Define household income brackets
income_brackets = [
    'Less than $66,000',
    '$66,000 - $77,700',
    '$77,770 - $88,800',
    '$88,800 - $99,900',
    '$99,900 - $110,950',
    '$110,950 - $119,850',
    'More than $119,850'
]

# Function to generate synthetic responses
def generate_response():
    email = fake.unique.email()
    full_name = fake.name()
    gender = random.choice(genders)
    age = random.randint(18, 80)
    street_address = fake.street_address()
    unit_apt = random.choice(['', 'Apt ' + str(random.randint(1, 999))])
    city = random.choice(cities)
    phone_number = fake.phone_number()
    how_hear_choice = random.choice(how_hear)
    only_title = random.choice(yes_no)
    purchase_year = random.randint(1980, 2023)
    retrofitted = random.choice(yes_no)
    household_size = random.choices(['1','2','3','4','5','More Than 5'], weights=[0.1,0.3,0.3,0.2,0.05,0.05])[0]
    income = random.choice(income_brackets)
    unemployed = random.choice(yes_no)
    main_contact = random.choice(yes_no)

    if main_contact == 'Yes':
        contact_name = fake.name()
        contact_relationship = random.choice(relationships)
        contact_phone = fake.phone_number()
        contact_email = fake.email()
    else:
        contact_name = ''
        contact_relationship = ''
        contact_phone = ''
        contact_email = ''

    additional_info = "No additional information."

    ethnicity = random.choice(ethnicities + [''])  # Optional
    acknowledgement = "Upon Submission, you will receive our application survey within 5-7 Business Days. We'll ask that you provide proof of homeownership, fulltime residence, and household income. You'll need to mail or email copies of your current property tax and mortgage statements, homeowners insurance policy, and recent utility bill, as well as income documents (like tax returns, current pay stubs or benefit letters, and bank account information) for all household members over 18. We use this information ensure that your household income falls below 80% of the Area Median Income which is our income cutoff for eligibility."

    return {
        "Timestamp": fake.date_time_this_year().strftime("%m/%d/%Y %H:%M:%S"),
        "Email Address": email,
        "Applicant's Full Name": full_name,
        "Street Address:": street_address,
        "Best Phone Number:": phone_number,
        "Email Address": email,
        "How did you hear about our program?": how_hear_choice,
        "Are you the only person on the title?": only_title,
        "What year did you purchase your home? ": purchase_year,
        "Has your home ever been retrofitted? ": retrofitted,
        "How many people live in your home? ": household_size,
        "Approximate annual household income? ": income,
        "Are you currently unemployed? ": unemployed,
        "Is there someone else in your household who will be acting as the main point of contact?": main_contact,
        "Contact's Best Phone number:": contact_phone,
        "Contact's Email Address:": contact_email,
        "Please share any additional information about your repair request or situation you feel would be relevant.": additional_info,
        "\"If yes, please list that contact personâ€™s full name. (Leave BLANK if no)\"": contact_name,
        "Unit/Apt. #": unit_apt,
        "City of Residence": city,
        "Column 20": '',  # Placeholder if needed
        "Your Relationship with this Contact": contact_relationship,
        "Acknowledgement": acknowledgement,
        "(Optional) What is your Ethnicity?": ethnicity,
        "Gender": gender,
        "Age": age,
        "Column 22": ''  # Placeholder if needed
    }

# Generate synthetic data
data = [generate_response() for _ in range(NUM_RESPONSES)]

# Create DataFrame
df = pd.DataFrame(data)

# Save to CSV
df.to_csv('synthetic_survey_responses.csv', index=False)

# Display first few rows
df.head()